version: "3"

services:
  app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    ports:
      - ${GRPC_PORT}:${GRPC_PORT}
    volumes:
      - ../configs/app.toml:/configs/app.toml
    command: [ "./api_server", "--config=configs/app.toml" ]
    depends_on:
      - db
    networks:
      antibrutforce:
        aliases:
          - app
#  migrate:
#    build:
#      context: ..
#      dockerfile: build/Dockerfile_migrate
#    depends_on:
#      db:
#        condition: service_healthy
#    command: >
#      goose -dir /migrations postgres "postgres://dbuser:dbpass@db:5432/hw?sslmode=disable" up
#    restart: "no"

  db:
    image: postgres:16.6-alpine3.21
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      antibrutforce:
        aliases:
          - db

networks:
  antibrutforce:

volumes:
  pgdata: